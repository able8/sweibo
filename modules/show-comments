#!/bin/bash

source "$SWEIBO_DIR/common"
source "$SWEIBO_DIR/presentation"

status_file="$SWEIBO_CONFIG_DIR/timeline_statuses"

if [ ! -f "$status_file" ]; then
    echo -e "\e[31mNo timeline viewed\e[0m"
    exit 1
fi

comments_file="$SWEIBO_CONFIG_DIR/comments_file"
info_file="$SWEIBO_CONFIG_DIR/comments_info"

refresh="false"

options=

page="1"
count="20"

while getopts rc:p: FLAG; do
    case $FLAG in
        r) refresh="true";;
        c)
            count="$OPTARG"
            ;;
        p)
            page="$OPTARG"
            ;;
        *) :;;
    esac
done
shift $((OPTIND-1))

options="$options -p $page"
options="$options -c $count"

status_num="$1"
if [ -z "$status_num" ]; then
    echo -e "\e[31mPlease add status number to the end of the argument list\e[0m"
    exit 1
fi

status=$(sed "${status_num}q;d" "$status_file")
id=$(echo "$status" | jq -r ".id")
if [ "$id" = "null" ]; then
    echo -e "\e[31mNo such status\e[0m"
    exit 1
fi
options="$options -i $id"

time=$(date | tr ' ' '-')
if [ ! -f "$info_file" ]; then touch "$info_file"; fi
file_id=$(awk '$1=="id" {print $2}' "$info_file")
file_page=$(awk '$1=="page" {print $2}' "$info_file")
file_time=$(awk '$1=="time" {print $2}' "$info_file")
file_count=$(awk '$1=="count" {print $2}' "$info_file")

if [ "$file_id" != "$id" ]; then refresh="true"; fi
if [ "$file_page" != "$page" ]; then refresh="true"; fi
if [ "$file_count" != "$count" ]; then refresh="true"; fi
if [ ! -f "$status_file" ]; then refresh="true"; fi

if [ $refresh = "true" ]; then
    echo "Fetching..."

    response=$("$SWEIBO_MODULE_DIR/api/comments/show" $options)
    if [ -z "$response" ]; then
        echo -e "\e[31mFailed to get comments, exiting...\e[0m"
        exit 1
    fi
    echo "$response" | jq ".comments[]" -c > "$comments_file"
    echo "id $id" > "$info_file";  file_id="$id"
    echo "page $page" >> "$info_file"; file_page="$page"
    echo "count $count" >> "$info_file"; file_count="$count"
    echo "time $time" >> "$info_file"; file_time="$time"

    echo "Comments fetched"
fi


comments_count=$(wc -l "$comments_file" | awk '{print $1}')

function info()
{
    echo -e "\e[32;1mStatus: $file_id - page $file_page ( $comments_count / $file_count per page )\e[0m"
    echo -e "\e[32;1mUpdated at: $(echo "$file_time" | tr '-' ' ')\e[0m"
}

function main()
{
    display_status "$status"

    breakline "\e[32m"
    info
    breakline "\e[32m"

    local i=1
    while (( i <= comments_count )); do
        echo -en "\e[1m[$i]\e[0m  "

        data=$(sed "${i}q;d" "$comments_file")
        display_comment "$data"
        breakline "\e[32m"

        let ++i
    done

    info
}
main | less -R

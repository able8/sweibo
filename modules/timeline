#!/bin/bash


source "$SWEIBO_FACILITIES_DIR/presentation"
source "$SWEIBO_FACILITIES_DIR/common"

status_file="$SWEIBO_CONFIG_DIR/timeline_statuses"
info_file="$SWEIBO_CONFIG_DIR/timeline_info"
refresh="false"

options=

page="1"
count="20"

while getopts rc:p: FLAG; do
    case $FLAG in
        r) refresh="true";;
        c) count="$OPTARG" ;;
        p) page="$OPTARG";;
        *) :;;
    esac
done
shift $((OPTIND-1))
options="$options -p $page"
options="$options -c $count"

type="home"
if [ -n "$1" ]; then type="$1"; fi
time=$(date | tr ' ' '-')
if [ ! -f "$info_file" ]; then touch "$info_file"; fi
file_type=$(awk '$1=="type" {print $2}' "$info_file")
file_page=$(awk '$1=="page" {print $2}' "$info_file")
file_time=$(awk '$1=="time" {print $2}' "$info_file")
file_count=$(awk '$1=="count" {print $2}' "$info_file")

if [ "$file_type" != "$type" ]; then refresh="true"; fi
if [ "$file_page" != "$page" ]; then refresh="true"; fi
if [ "$file_count" != "$count" ]; then refresh="true"; fi
if [ ! -f "$status_file" ]; then refresh="true"; fi

if [ $refresh = "true" ]; then
    echo "Fetching..."

    response=$("$SWEIBO_MODULES_DIR/api/statuses/${type}_timeline" $options)
    if [ -z "$response" ]; then
        echo -e "\e[31mFailed to get timeline, exiting...\e[0m"
        exit 1
    fi
    echo "$response" | jq ".statuses[]" -c > "$status_file"
    echo "type $type" > "$info_file";  file_type="$type"
    echo "page $page" >> "$info_file"; file_page="$page"
    echo "count $count" >> "$info_file"; file_count="$count"
    echo "time $time" >> "$info_file"; file_time="$time"

    echo "Timeline fetched"
fi


statuses_count=$(wc -l "$status_file" | awk '{print $1}')

function info()
{
    echo -e "\e[32;1mTimeline: $file_type - page $file_page ( $statuses_count / $file_count per page )\e[0m"
    echo -e "\e[32;1mUpdated at: $(echo "$file_time" | tr '-' ' ')\e[0m"
}

function main()
{
    info
    breakline "\e[32m"

    i=1
    while (( i <= statuses_count )); do
        echo -en "\e[1m[$i]\e[0m "

        data=$(sed "${i}q;d" "$status_file")
        display_status "$data"
        breakline "\e[32;1m"
        let ++i
    done

    info
}
main | less -R
